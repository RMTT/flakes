---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  labels:
    servarr: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      servarr: sonarr
  template:
    metadata:
      labels:
        servarr: sonarr
    spec:
      nodeSelector:
        "kubernetes.io/hostname": homeserver
      containers:
      - name: sonarr
        imagePullPolicy: "Always"
        image: lscr.io/linuxserver/sonarr
        env:
          - name: TZ
            value: "Asia/Shanghai"
          - name: PUID
            value: "1000"
        ports:
        - containerPort: 8989
        volumeMounts:
          - name: config
            mountPath: "/config"
          - name: media
            mountPath: "/media"
          - name: downloads
            mountPath: "/downloads"
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: sonarr-config
        - name: media
          persistentVolumeClaim:
            claimName: servarr-data-media
        - name: downloads
          persistentVolumeClaim:
            claimName: servarr-data-downloads
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
spec:
  type: ClusterIP
  selector:
      servarr: sonarr
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8989
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-all"
    traefik.ingress.kubernetes.io/router.entrypoints: "web,websecure"
    traefik.ingress.kubernetes.io/router.middlewares: authentik-ak-outpost-authentik-embedded-outpost@kubernetescrd
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - sonarr.rmtt.tech
    secretName: sonarr-tls
  rules:
  - host: sonarr.rmtt.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sonarr
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr-public
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-all"
    traefik.ingress.kubernetes.io/router.entrypoints: "public"
    traefik.ingress.kubernetes.io/router.middlewares: authentik-ak-outpost-public-access-for-rmtttech@kubernetescrd
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - sonarr.rmtt.tech
    secretName: sonarr-tls
  rules:
  - host: sonarr.rmtt.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sonarr
            port:
              number: 80
